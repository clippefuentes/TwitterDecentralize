/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Twitter, TwitterInterface } from "../Twitter";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewTweet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tweet",
        type: "string",
      },
    ],
    name: "createTweet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getLikedByTweet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getTweetComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Twitter.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTweetLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTweets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "likeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTweetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "likes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "unlikeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015561142d806100186000396000f3fe6080604052600436106100915760003560e01c80638076e02b116100595780638076e02b1461017e5780638d12293f146101a957806396a3d8d7146101e6578063a2afce8814610202578063e8d857b01461022d57610091565b80631d86e904146100965780632f5899d7146100bf5780635ffc6ceb146100fc5780637b72e2d9146101255780637c9cd2bc14610162575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610d6e565b61026e565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610cb0565b6103de565b6040516100f39190611024565b60405180910390f35b34801561010857600080fd5b50610123600480360381019061011e9190610d6e565b610475565b005b34801561013157600080fd5b5061014c60048036038101906101479190610d6e565b6105e5565b6040516101599190611046565b60405180910390f35b61017c60048036038101906101779190610cd9565b610683565b005b34801561018a57600080fd5b506101936107e3565b6040516101a09190611061565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190610d6e565b6107e9565b6040516101dd9190611002565b60405180910390f35b61020060048036038101906101fb9190610d1a565b61098f565b005b34801561020e57600080fd5b50610217610a81565b6040516102249190611061565b60405180910390f35b34801561023957600080fd5b50610254600480360381019061024f9190610d6e565b610a8d565b60405161026595949392919061107c565b60405180910390f35b8060008082815481106102aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600115158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461031957600080fd5b6000808481548110610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160008154809291906103d390611255565b919050555050505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561046957602002820191906000526020600020905b815481526020019060010190808311610455575b50505050509050919050565b8060008082815481106104b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461052057600080fd5b600080848154811061055b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160008154809291906105da906112e2565b919050555050505050565b6000808281548110610620577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906007020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060018160018154018082558091505003906000526020600020906007020190506001548160000181905550818160010190805190602001906106c9929190610b7b565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816003018190555060008160040181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060015490806001815401808255809150506001900390600052602060002001600090919091909150556001600081548092919061079b906112e2565b91905055507f60b80d267a26d1336f2ec73aafef1608a463e6064f8d85e1e7d4989403a9e14b3360015484426040516107d79493929190610fb6565b60405180910390a15050565b60015481565b606060008281548110610825577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201600601805480602002602001604051908101604052809291908181526020016000905b828210156109845783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546108939061127f565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf9061127f565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152505081526020019060010190610856565b505050509050919050565b60008082815481106109ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600081600601805490509050600082600601600181600181540180825580915050039060005260206000209060040201905084816001019080519060200190610a24929190610b7b565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600301819055508181600001819055505050505050565b60008080549050905090565b60008181548110610a9d57600080fd5b9060005260206000209060070201600091509050806000015490806001018054610ac69061127f565b80601f0160208091040260200160405190810160405280929190818152602001828054610af29061127f565b8015610b3f5780601f10610b1457610100808354040283529160200191610b3f565b820191906000526020600020905b815481529060010190602001808311610b2257829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b828054610b879061127f565b90600052602060002090601f016020900481019282610ba95760008555610bf0565b82601f10610bc257805160ff1916838001178555610bf0565b82800160010185558215610bf0579182015b82811115610bef578251825591602001919060010190610bd4565b5b509050610bfd9190610c01565b5090565b5b80821115610c1a576000816000905550600101610c02565b5090565b6000610c31610c2c846110fb565b6110d6565b905082815260208101848484011115610c4957600080fd5b610c54848285611213565b509392505050565b600081359050610c6b816113c9565b92915050565b600082601f830112610c8257600080fd5b8135610c92848260208601610c1e565b91505092915050565b600081359050610caa816113e0565b92915050565b600060208284031215610cc257600080fd5b6000610cd084828501610c5c565b91505092915050565b600060208284031215610ceb57600080fd5b600082013567ffffffffffffffff811115610d0557600080fd5b610d1184828501610c71565b91505092915050565b60008060408385031215610d2d57600080fd5b600083013567ffffffffffffffff811115610d4757600080fd5b610d5385828601610c71565b9250506020610d6485828601610c9b565b9150509250929050565b600060208284031215610d8057600080fd5b6000610d8e84828501610c9b565b91505092915050565b6000610da38383610f35565b905092915050565b6000610db78383610f98565b60208301905092915050565b610dcc816111cb565b82525050565b610ddb816111cb565b82525050565b6000610dec8261114c565b610df68185611187565b935083602082028501610e088561112c565b8060005b85811015610e445784840389528151610e258582610d97565b9450610e308361116d565b925060208a01995050600181019050610e0c565b50829750879550505050505092915050565b6000610e6182611157565b610e6b8185611198565b9350610e768361113c565b8060005b83811015610ea7578151610e8e8882610dab565b9750610e998361117a565b925050600181019050610e7a565b5085935050505092915050565b610ebd816111dd565b82525050565b6000610ece82611162565b610ed881856111a9565b9350610ee8818560208601611222565b610ef1816113b8565b840191505092915050565b6000610f0782611162565b610f1181856111ba565b9350610f21818560208601611222565b610f2a816113b8565b840191505092915050565b6000608083016000830151610f4d6000860182610f98565b5060208301518482036020860152610f658282610ec3565b9150506040830151610f7a6040860182610dc3565b506060830151610f8d6060860182610f98565b508091505092915050565b610fa181611209565b82525050565b610fb081611209565b82525050565b6000608082019050610fcb6000830187610dd2565b610fd86020830186610fa7565b8181036040830152610fea8185610efc565b9050610ff96060830184610fa7565b95945050505050565b6000602082019050818103600083015261101c8184610de1565b905092915050565b6000602082019050818103600083015261103e8184610e56565b905092915050565b600060208201905061105b6000830184610eb4565b92915050565b60006020820190506110766000830184610fa7565b92915050565b600060a0820190506110916000830188610fa7565b81810360208301526110a38187610efc565b90506110b26040830186610dd2565b6110bf6060830185610fa7565b6110cc6080830184610fa7565b9695505050505050565b60006110e06110f1565b90506110ec82826112b1565b919050565b6000604051905090565b600067ffffffffffffffff82111561111657611115611389565b5b61111f826113b8565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111d6826111e9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611240578082015181840152602081019050611225565b8381111561124f576000848401525b50505050565b600061126082611209565b915060008214156112745761127361132b565b5b600182039050919050565b6000600282049050600182168061129757607f821691505b602082108114156112ab576112aa61135a565b5b50919050565b6112ba826113b8565b810181811067ffffffffffffffff821117156112d9576112d8611389565b5b80604052505050565b60006112ed82611209565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113205761131f61132b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6113d2816111cb565b81146113dd57600080fd5b50565b6113e981611209565b81146113f457600080fd5b5056fea26469706673582212203d363a4aaeb044911ad8a874ab3941c75beccd3de995b7083503976f75f7d76364736f6c63430008040033";

type TwitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Twitter__factory extends ContractFactory {
  constructor(...args: TwitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Twitter";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Twitter> {
    return super.deploy(overrides || {}) as Promise<Twitter>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Twitter {
    return super.attach(address) as Twitter;
  }
  connect(signer: Signer): Twitter__factory {
    return super.connect(signer) as Twitter__factory;
  }
  static readonly contractName: "Twitter";
  public readonly contractName: "Twitter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwitterInterface {
    return new utils.Interface(_abi) as TwitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Twitter {
    return new Contract(address, _abi, signerOrProvider) as Twitter;
  }
}
