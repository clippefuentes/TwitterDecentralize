/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Twitter, TwitterInterface } from "../Twitter";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewComment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewTweet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tweet",
        type: "string",
      },
    ],
    name: "createTweet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getLikedByTweet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getTweetComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Twitter.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTweetLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTweets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "likeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTweetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "likes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "unlikeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015561146a806100186000396000f3fe6080604052600436106100915760003560e01c80638076e02b116100595780638076e02b1461017e5780638d12293f146101a957806396a3d8d7146101e6578063a2afce8814610202578063e8d857b01461022d57610091565b80631d86e904146100965780632f5899d7146100bf5780635ffc6ceb146100fc5780637b72e2d9146101255780637c9cd2bc14610162575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610dab565b61026e565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610ced565b6103de565b6040516100f39190611061565b60405180910390f35b34801561010857600080fd5b50610123600480360381019061011e9190610dab565b610475565b005b34801561013157600080fd5b5061014c60048036038101906101479190610dab565b6105e5565b6040516101599190611083565b60405180910390f35b61017c60048036038101906101779190610d16565b610683565b005b34801561018a57600080fd5b506101936107e3565b6040516101a0919061109e565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190610dab565b6107e9565b6040516101dd919061103f565b60405180910390f35b61020060048036038101906101fb9190610d57565b61098f565b005b34801561020e57600080fd5b50610217610abe565b604051610224919061109e565b60405180910390f35b34801561023957600080fd5b50610254600480360381019061024f9190610dab565b610aca565b6040516102659594939291906110b9565b60405180910390f35b8060008082815481106102aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600115158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461031957600080fd5b6000808481548110610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160008154809291906103d390611292565b919050555050505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561046957602002820191906000526020600020905b815481526020019060010190808311610455575b50505050509050919050565b8060008082815481106104b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461052057600080fd5b600080848154811061055b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160008154809291906105da9061131f565b919050555050505050565b6000808281548110610620577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906007020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060018160018154018082558091505003906000526020600020906007020190506001548160000181905550818160010190805190602001906106c9929190610bb8565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816003018190555060008160040181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060015490806001815401808255809150506001900390600052602060002001600090919091909150556001600081548092919061079b9061131f565b91905055507f60b80d267a26d1336f2ec73aafef1608a463e6064f8d85e1e7d4989403a9e14b3360015484426040516107d79493929190610ff3565b60405180910390a15050565b60015481565b606060008281548110610825577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201600601805480602002602001604051908101604052809291908181526020016000905b82821015610984578382906000526020600020906004020160405180608001604052908160008201548152602001600182018054610893906112bc565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf906112bc565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152505081526020019060010190610856565b505050509050919050565b60008082815481106109ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600081600601805490509050600082600601600181600181540180825580915050039060005260206000209060040201905084816001019080519060200190610a24929190610bb8565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600301819055508181600001819055507f5b935cc1da729ce49751ace9742260941a8e15827ef2e1b7732c3a313b845db833838742604051610aaf9493929190610ff3565b60405180910390a15050505050565b60008080549050905090565b60008181548110610ada57600080fd5b9060005260206000209060070201600091509050806000015490806001018054610b03906112bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2f906112bc565b8015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b828054610bc4906112bc565b90600052602060002090601f016020900481019282610be65760008555610c2d565b82601f10610bff57805160ff1916838001178555610c2d565b82800160010185558215610c2d579182015b82811115610c2c578251825591602001919060010190610c11565b5b509050610c3a9190610c3e565b5090565b5b80821115610c57576000816000905550600101610c3f565b5090565b6000610c6e610c6984611138565b611113565b905082815260208101848484011115610c8657600080fd5b610c91848285611250565b509392505050565b600081359050610ca881611406565b92915050565b600082601f830112610cbf57600080fd5b8135610ccf848260208601610c5b565b91505092915050565b600081359050610ce78161141d565b92915050565b600060208284031215610cff57600080fd5b6000610d0d84828501610c99565b91505092915050565b600060208284031215610d2857600080fd5b600082013567ffffffffffffffff811115610d4257600080fd5b610d4e84828501610cae565b91505092915050565b60008060408385031215610d6a57600080fd5b600083013567ffffffffffffffff811115610d8457600080fd5b610d9085828601610cae565b9250506020610da185828601610cd8565b9150509250929050565b600060208284031215610dbd57600080fd5b6000610dcb84828501610cd8565b91505092915050565b6000610de08383610f72565b905092915050565b6000610df48383610fd5565b60208301905092915050565b610e0981611208565b82525050565b610e1881611208565b82525050565b6000610e2982611189565b610e3381856111c4565b935083602082028501610e4585611169565b8060005b85811015610e815784840389528151610e628582610dd4565b9450610e6d836111aa565b925060208a01995050600181019050610e49565b50829750879550505050505092915050565b6000610e9e82611194565b610ea881856111d5565b9350610eb383611179565b8060005b83811015610ee4578151610ecb8882610de8565b9750610ed6836111b7565b925050600181019050610eb7565b5085935050505092915050565b610efa8161121a565b82525050565b6000610f0b8261119f565b610f1581856111e6565b9350610f2581856020860161125f565b610f2e816113f5565b840191505092915050565b6000610f448261119f565b610f4e81856111f7565b9350610f5e81856020860161125f565b610f67816113f5565b840191505092915050565b6000608083016000830151610f8a6000860182610fd5565b5060208301518482036020860152610fa28282610f00565b9150506040830151610fb76040860182610e00565b506060830151610fca6060860182610fd5565b508091505092915050565b610fde81611246565b82525050565b610fed81611246565b82525050565b60006080820190506110086000830187610e0f565b6110156020830186610fe4565b81810360408301526110278185610f39565b90506110366060830184610fe4565b95945050505050565b600060208201905081810360008301526110598184610e1e565b905092915050565b6000602082019050818103600083015261107b8184610e93565b905092915050565b60006020820190506110986000830184610ef1565b92915050565b60006020820190506110b36000830184610fe4565b92915050565b600060a0820190506110ce6000830188610fe4565b81810360208301526110e08187610f39565b90506110ef6040830186610e0f565b6110fc6060830185610fe4565b6111096080830184610fe4565b9695505050505050565b600061111d61112e565b905061112982826112ee565b919050565b6000604051905090565b600067ffffffffffffffff821115611153576111526113c6565b5b61115c826113f5565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061121382611226565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561127d578082015181840152602081019050611262565b8381111561128c576000848401525b50505050565b600061129d82611246565b915060008214156112b1576112b0611368565b5b600182039050919050565b600060028204905060018216806112d457607f821691505b602082108114156112e8576112e7611397565b5b50919050565b6112f7826113f5565b810181811067ffffffffffffffff82111715611316576113156113c6565b5b80604052505050565b600061132a82611246565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561135d5761135c611368565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61140f81611208565b811461141a57600080fd5b50565b61142681611246565b811461143157600080fd5b5056fea264697066735822122037114f0b7ffcf58549f092227215503af00e8efd2dd84a08ceda315335be695264736f6c63430008040033";

type TwitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Twitter__factory extends ContractFactory {
  constructor(...args: TwitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Twitter";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Twitter> {
    return super.deploy(overrides || {}) as Promise<Twitter>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Twitter {
    return super.attach(address) as Twitter;
  }
  connect(signer: Signer): Twitter__factory {
    return super.connect(signer) as Twitter__factory;
  }
  static readonly contractName: "Twitter";
  public readonly contractName: "Twitter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwitterInterface {
    return new utils.Interface(_abi) as TwitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Twitter {
    return new Contract(address, _abi, signerOrProvider) as Twitter;
  }
}
