/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Twitter, TwitterInterface } from "../Twitter";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tweet",
        type: "string",
      },
    ],
    name: "createTweet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getTweetComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Twitter.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTweetLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTweets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "likeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTweetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "likes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "unlikeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015561126e806100186000396000f3fe6080604052600436106100865760003560e01c80638076e02b116100595780638076e02b146101365780638d12293f1461016157806396a3d8d71461019e578063a2afce88146101ba578063e8d857b0146101e557610086565b80631d86e9041461008b5780632f5899d7146100b45780635ffc6ceb146100f15780637c9cd2bc1461011a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c31565b610226565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610b73565b610396565b6040516100e89190610e8c565b60405180910390f35b3480156100fd57600080fd5b5061011860048036038101906101139190610c31565b61042d565b005b610134600480360381019061012f9190610b9c565b61059d565b005b34801561014257600080fd5b5061014b6106a6565b6040516101589190610eae565b60405180910390f35b34801561016d57600080fd5b5061018860048036038101906101839190610c31565b6106ac565b6040516101959190610e6a565b60405180910390f35b6101b860048036038101906101b39190610bdd565b610852565b005b3480156101c657600080fd5b506101cf610944565b6040516101dc9190610eae565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190610c31565b610950565b60405161021d959493929190610ec9565b60405180910390f35b806000808281548110610262577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600115158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146102d157600080fd5b600080848154811061030c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600401600081548092919061038b90611096565b919050555050505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561042157602002820191906000526020600020905b81548152602001906001019080831161040d575b50505050509050919050565b806000808281548110610469577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104d857600080fd5b6000808481548110610513577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600401600081548092919061059290611123565b919050555050505050565b60008060018160018154018082558091505003906000526020600020906007020190506001548160000181905550818160010190805190602001906105e3929190610a3e565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816003018190555060008160040181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060015490806001815401808255809150506001900390600052602060002001600090919091909150555050565b60015481565b6060600082815481106106e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201600601805480602002602001604051908101604052809291908181526020016000905b82821015610847578382906000526020600020906004020160405180608001604052908160008201548152602001600182018054610756906110c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906110c0565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152505081526020019060010190610719565b505050509050919050565b600080828154811061088d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906007020190506000816006018054905090506000826006016001816001815401808255809150500390600052602060002090600402019050848160010190805190602001906108e7929190610a3e565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600301819055508181600001819055505050505050565b60008080549050905090565b6000818154811061096057600080fd5b9060005260206000209060070201600091509050806000015490806001018054610989906110c0565b80601f01602080910402602001604051908101604052809291908181526020018280546109b5906110c0565b8015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b828054610a4a906110c0565b90600052602060002090601f016020900481019282610a6c5760008555610ab3565b82601f10610a8557805160ff1916838001178555610ab3565b82800160010185558215610ab3579182015b82811115610ab2578251825591602001919060010190610a97565b5b509050610ac09190610ac4565b5090565b5b80821115610add576000816000905550600101610ac5565b5090565b6000610af4610aef84610f48565b610f23565b905082815260208101848484011115610b0c57600080fd5b610b17848285611054565b509392505050565b600081359050610b2e8161120a565b92915050565b600082601f830112610b4557600080fd5b8135610b55848260208601610ae1565b91505092915050565b600081359050610b6d81611221565b92915050565b600060208284031215610b8557600080fd5b6000610b9384828501610b1f565b91505092915050565b600060208284031215610bae57600080fd5b600082013567ffffffffffffffff811115610bc857600080fd5b610bd484828501610b34565b91505092915050565b60008060408385031215610bf057600080fd5b600083013567ffffffffffffffff811115610c0a57600080fd5b610c1685828601610b34565b9250506020610c2785828601610b5e565b9150509250929050565b600060208284031215610c4357600080fd5b6000610c5184828501610b5e565b91505092915050565b6000610c668383610de9565b905092915050565b6000610c7a8383610e4c565b60208301905092915050565b610c8f81611018565b82525050565b610c9e81611018565b82525050565b6000610caf82610f99565b610cb98185610fd4565b935083602082028501610ccb85610f79565b8060005b85811015610d075784840389528151610ce88582610c5a565b9450610cf383610fba565b925060208a01995050600181019050610ccf565b50829750879550505050505092915050565b6000610d2482610fa4565b610d2e8185610fe5565b9350610d3983610f89565b8060005b83811015610d6a578151610d518882610c6e565b9750610d5c83610fc7565b925050600181019050610d3d565b5085935050505092915050565b6000610d8282610faf565b610d8c8185610ff6565b9350610d9c818560208601611063565b610da5816111f9565b840191505092915050565b6000610dbb82610faf565b610dc58185611007565b9350610dd5818560208601611063565b610dde816111f9565b840191505092915050565b6000608083016000830151610e016000860182610e4c565b5060208301518482036020860152610e198282610d77565b9150506040830151610e2e6040860182610c86565b506060830151610e416060860182610e4c565b508091505092915050565b610e558161104a565b82525050565b610e648161104a565b82525050565b60006020820190508181036000830152610e848184610ca4565b905092915050565b60006020820190508181036000830152610ea68184610d19565b905092915050565b6000602082019050610ec36000830184610e5b565b92915050565b600060a082019050610ede6000830188610e5b565b8181036020830152610ef08187610db0565b9050610eff6040830186610c95565b610f0c6060830185610e5b565b610f196080830184610e5b565b9695505050505050565b6000610f2d610f3e565b9050610f3982826110f2565b919050565b6000604051905090565b600067ffffffffffffffff821115610f6357610f626111ca565b5b610f6c826111f9565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110238261102a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611081578082015181840152602081019050611066565b83811115611090576000848401525b50505050565b60006110a18261104a565b915060008214156110b5576110b461116c565b5b600182039050919050565b600060028204905060018216806110d857607f821691505b602082108114156110ec576110eb61119b565b5b50919050565b6110fb826111f9565b810181811067ffffffffffffffff8211171561111a576111196111ca565b5b80604052505050565b600061112e8261104a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111615761116061116c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61121381611018565b811461121e57600080fd5b50565b61122a8161104a565b811461123557600080fd5b5056fea2646970667358221220f95561d47ff425bf303dcadfaf74ae0d4ea725407e5ea1ccb14369e4150e97e164736f6c63430008040033";

type TwitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Twitter__factory extends ContractFactory {
  constructor(...args: TwitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Twitter";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Twitter> {
    return super.deploy(overrides || {}) as Promise<Twitter>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Twitter {
    return super.attach(address) as Twitter;
  }
  connect(signer: Signer): Twitter__factory {
    return super.connect(signer) as Twitter__factory;
  }
  static readonly contractName: "Twitter";
  public readonly contractName: "Twitter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwitterInterface {
    return new utils.Interface(_abi) as TwitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Twitter {
    return new Contract(address, _abi, signerOrProvider) as Twitter;
  }
}
