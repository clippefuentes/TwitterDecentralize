/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Twitter, TwitterInterface } from "../Twitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tweet",
        type: "string",
      },
    ],
    name: "createTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "likeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTweetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tweet",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "likes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "unlikeTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTweets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610da2806100256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637c9cd2bc1161005b5780637c9cd2bc146100ea5780638076e02b1461010657806396a3d8d714610124578063e8d857b0146101405761007d565b80631d86e904146100825780632e06f3471461009e5780635ffc6ceb146100ce575b600080fd5b61009c600480360381019061009791906109e5565b610174565b005b6100b860048036038101906100b39190610914565b6102e4565b6040516100c59190610a65565b60405180910390f35b6100e860048036038101906100e391906109e5565b610315565b005b61010460048036038101906100ff9190610950565b610485565b005b61010e6105d0565b60405161011b9190610a65565b60405180910390f35b61013e60048036038101906101399190610991565b6105d6565b005b61015a600480360381019061015591906109e5565b6106f1565b60405161016b959493929190610a80565b60405180910390f35b8060008082815481106101b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600115158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461021f57600080fd5b600080848154811061025a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160008154809291906102d990610bca565b919050555050505050565b6002602052816000526040600020818154811061030057600080fd5b90600052602060002001600091509150505481565b806000808281548110610351577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600015158160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103c057600080fd5b60008084815481106103fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060070201905060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600401600081548092919061047a90610c57565b919050555050505050565b600080600154815481106104c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906007020190506001548160000181905550818160010190805190602001906104f59291906107df565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816003018190555060008160040181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001549080600181540180825580915050600190039060005260206000200160009091909190915055600160008154809291906105c790610c57565b91905055505050565b60015481565b6000808281548110610611577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702019050600081600601826006018054905081548110610666577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020190508381600101908051906020019061068e9291906107df565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600301819055508160060180549050816000018190555050505050565b6000818154811061070157600080fd5b906000526020600020906007020160009150905080600001549080600101805461072a90610bf4565b80601f016020809104026020016040519081016040528092919081815260200182805461075690610bf4565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b8280546107eb90610bf4565b90600052602060002090601f01602090048101928261080d5760008555610854565b82601f1061082657805160ff1916838001178555610854565b82800160010185558215610854579182015b82811115610853578251825591602001919060010190610838565b5b5090506108619190610865565b5090565b5b8082111561087e576000816000905550600101610866565b5090565b600061089561089084610aff565b610ada565b9050828152602081018484840111156108ad57600080fd5b6108b8848285610b88565b509392505050565b6000813590506108cf81610d3e565b92915050565b600082601f8301126108e657600080fd5b81356108f6848260208601610882565b91505092915050565b60008135905061090e81610d55565b92915050565b6000806040838503121561092757600080fd5b6000610935858286016108c0565b9250506020610946858286016108ff565b9150509250929050565b60006020828403121561096257600080fd5b600082013567ffffffffffffffff81111561097c57600080fd5b610988848285016108d5565b91505092915050565b600080604083850312156109a457600080fd5b600083013567ffffffffffffffff8111156109be57600080fd5b6109ca858286016108d5565b92505060206109db858286016108ff565b9150509250929050565b6000602082840312156109f757600080fd5b6000610a05848285016108ff565b91505092915050565b610a1781610b4c565b82525050565b6000610a2882610b30565b610a328185610b3b565b9350610a42818560208601610b97565b610a4b81610d2d565b840191505092915050565b610a5f81610b7e565b82525050565b6000602082019050610a7a6000830184610a56565b92915050565b600060a082019050610a956000830188610a56565b8181036020830152610aa78187610a1d565b9050610ab66040830186610a0e565b610ac36060830185610a56565b610ad06080830184610a56565b9695505050505050565b6000610ae4610af5565b9050610af08282610c26565b919050565b6000604051905090565b600067ffffffffffffffff821115610b1a57610b19610cfe565b5b610b2382610d2d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b5782610b5e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bb5578082015181840152602081019050610b9a565b83811115610bc4576000848401525b50505050565b6000610bd582610b7e565b91506000821415610be957610be8610ca0565b5b600182039050919050565b60006002820490506001821680610c0c57607f821691505b60208210811415610c2057610c1f610ccf565b5b50919050565b610c2f82610d2d565b810181811067ffffffffffffffff82111715610c4e57610c4d610cfe565b5b80604052505050565b6000610c6282610b7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9557610c94610ca0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610d4781610b4c565b8114610d5257600080fd5b50565b610d5e81610b7e565b8114610d6957600080fd5b5056fea2646970667358221220dc66ab0f1220516241fd6ffae8b2ef0d850c3d2775bbd820c886391bc903edfe64736f6c63430008040033";

type TwitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Twitter__factory extends ContractFactory {
  constructor(...args: TwitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Twitter";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Twitter> {
    return super.deploy(overrides || {}) as Promise<Twitter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Twitter {
    return super.attach(address) as Twitter;
  }
  connect(signer: Signer): Twitter__factory {
    return super.connect(signer) as Twitter__factory;
  }
  static readonly contractName: "Twitter";
  public readonly contractName: "Twitter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwitterInterface {
    return new utils.Interface(_abi) as TwitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Twitter {
    return new Contract(address, _abi, signerOrProvider) as Twitter;
  }
}
